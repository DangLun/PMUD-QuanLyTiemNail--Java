/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlytiemnail;

import com.mysql.cj.result.Row;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trand
 */
public class QLTN extends javax.swing.JFrame {

    Connection conn = connectdata.getConnection();
    PreparedStatement pst = null;
    ResultSet rs = null;
    String use;

    /**
     * Creates new form QLTN
     */
    public QLTN() {
        initComponents();
        jlb_danhsach.setFont(new Font("Arial", Font.PLAIN, 25));
        jlb_danhsach.setForeground(Color.decode("#DC3545"));
        setLocationRelativeTo(null);
    }

    public QLTN(String username) {
        initComponents();
        jlb_username.setText(username);
        use = username;
        jlb_danhsach.setFont(new Font("Arial", Font.PLAIN, 25));
        jlb_danhsach.setForeground(Color.RED);
        setLocationRelativeTo(null);
        // an chuc nang
        jb_sua.setVisible(false);
        jb_tinhtongtien.setVisible(false);
        jb_add.setVisible(false);
        jb_thanhtoan.setVisible(false);
        jcombo_searchby.setVisible(false);
        jb_searchkhachhang.setVisible(false);
        jb_xoa.setVisible(false);
        jb_reset.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jFrame4 = new javax.swing.JFrame();
        jpane_header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlb_username = new javax.swing.JLabel();
        jb_changePass = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jb_nhanvien = new javax.swing.JButton();
        jb_dichvu = new javax.swing.JButton();
        jb_khachhang = new javax.swing.JButton();
        jb_lichsu = new javax.swing.JButton();
        jb_thoat = new javax.swing.JButton();
        jb_home = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_data = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jlb_danhsach = new javax.swing.JLabel();
        jb_searchkhachhang = new javax.swing.JButton();
        jcombo_searchby = new javax.swing.JComboBox<>();
        jb_add = new javax.swing.JButton();
        jb_reset = new javax.swing.JButton();
        jb_xoa = new javax.swing.JButton();
        jb_thanhtoan = new javax.swing.JButton();
        jb_tinhtongtien = new javax.swing.JButton();
        jb_sua = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý Tiệm Nail");
        setResizable(false);

        jpane_header.setBackground(new java.awt.Color(31, 40, 51));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("QUẢN LÍ TIỆM NAIL");

        jlb_username.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlb_username.setForeground(new java.awt.Color(197, 198, 199));
        jlb_username.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/profile.png"))); // NOI18N
        jlb_username.setText("Tên người dùng");

        jb_changePass.setBackground(new java.awt.Color(255, 255, 255));
        jb_changePass.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_changePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/password.png"))); // NOI18N
        jb_changePass.setText("Đổi mật khẩu");
        jb_changePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_changePassActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/rounded-in-photoretrica (1).png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jpane_headerLayout = new javax.swing.GroupLayout(jpane_header);
        jpane_header.setLayout(jpane_headerLayout);
        jpane_headerLayout.setHorizontalGroup(
            jpane_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpane_headerLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 567, Short.MAX_VALUE)
                .addComponent(jlb_username)
                .addGap(38, 38, 38)
                .addComponent(jb_changePass)
                .addContainerGap())
        );
        jpane_headerLayout.setVerticalGroup(
            jpane_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpane_headerLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jpane_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_changePass)
                    .addComponent(jlb_username))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpane_headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpane_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpane_headerLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)))
                .addGap(25, 25, 25))
        );

        jPanel1.setBackground(new java.awt.Color(31, 40, 51));

        jb_nhanvien.setBackground(new java.awt.Color(255, 255, 255));
        jb_nhanvien.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_nhanvien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/teamwork.png"))); // NOI18N
        jb_nhanvien.setText("Nhân viên");
        jb_nhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_nhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_nhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_nhanvienMouseExited(evt);
            }
        });
        jb_nhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_nhanvienActionPerformed(evt);
            }
        });

        jb_dichvu.setBackground(new java.awt.Color(255, 255, 255));
        jb_dichvu.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_dichvu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delivery-box.png"))); // NOI18N
        jb_dichvu.setText("Dịch vụ");
        jb_dichvu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_dichvu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_dichvuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_dichvuMouseExited(evt);
            }
        });
        jb_dichvu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_dichvuActionPerformed(evt);
            }
        });

        jb_khachhang.setBackground(new java.awt.Color(255, 255, 255));
        jb_khachhang.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_khachhang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/rating (1).png"))); // NOI18N
        jb_khachhang.setText("Khách hàng");
        jb_khachhang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_khachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_khachhangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_khachhangMouseExited(evt);
            }
        });
        jb_khachhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_khachhangActionPerformed(evt);
            }
        });

        jb_lichsu.setBackground(new java.awt.Color(255, 255, 255));
        jb_lichsu.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_lichsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/parchment.png"))); // NOI18N
        jb_lichsu.setText("Lịch sử");
        jb_lichsu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_lichsu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_lichsuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_lichsuMouseExited(evt);
            }
        });
        jb_lichsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_lichsuActionPerformed(evt);
            }
        });

        jb_thoat.setBackground(new java.awt.Color(255, 255, 255));
        jb_thoat.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_thoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        jb_thoat.setText("Đăng xuất");
        jb_thoat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_thoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_thoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_thoatMouseExited(evt);
            }
        });
        jb_thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_thoatActionPerformed(evt);
            }
        });

        jb_home.setBackground(new java.awt.Color(255, 255, 255));
        jb_home.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home-button.png"))); // NOI18N
        jb_home.setText("Trang Chủ");
        jb_home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jb_homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_homeMouseExited(evt);
            }
        });
        jb_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_homeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jb_dichvu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jb_home, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jb_khachhang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
            .addComponent(jb_nhanvien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jb_lichsu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jb_thoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jb_home)
                .addGap(18, 18, 18)
                .addComponent(jb_dichvu)
                .addGap(18, 18, 18)
                .addComponent(jb_khachhang)
                .addGap(18, 18, 18)
                .addComponent(jb_nhanvien)
                .addGap(18, 18, 18)
                .addComponent(jb_lichsu)
                .addGap(18, 18, 18)
                .addComponent(jb_thoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtable_data.setBackground(new java.awt.Color(204, 204, 255));
        jtable_data.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtable_data.setForeground(new java.awt.Color(0, 0, 0));
        jtable_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtable_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_data);

        jlb_danhsach.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlb_danhsach.setForeground(new java.awt.Color(255, 0, 0));

        jb_searchkhachhang.setBackground(new java.awt.Color(255, 255, 255));
        jb_searchkhachhang.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_searchkhachhang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/magnifying-glass.png"))); // NOI18N
        jb_searchkhachhang.setText("Tìm kiếm");
        jb_searchkhachhang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_searchkhachhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_searchkhachhangActionPerformed(evt);
            }
        });

        jcombo_searchby.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jcombo_searchby.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jb_add.setBackground(new java.awt.Color(255, 255, 255));
        jb_add.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add-button.png"))); // NOI18N
        jb_add.setText("Thêm");
        jb_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addActionPerformed(evt);
            }
        });

        jb_reset.setBackground(new java.awt.Color(255, 255, 255));
        jb_reset.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/redo.png"))); // NOI18N
        jb_reset.setText("Reset");
        jb_reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_resetActionPerformed(evt);
            }
        });

        jb_xoa.setBackground(new java.awt.Color(255, 255, 255));
        jb_xoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_xoa.setForeground(new java.awt.Color(255, 255, 255));
        jb_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bin.png"))); // NOI18N
        jb_xoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_xoaActionPerformed(evt);
            }
        });

        jb_thanhtoan.setBackground(new java.awt.Color(255, 255, 255));
        jb_thanhtoan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_thanhtoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/credit-card.png"))); // NOI18N
        jb_thanhtoan.setText("Thanh Toán");
        jb_thanhtoan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_thanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_thanhtoanActionPerformed(evt);
            }
        });

        jb_tinhtongtien.setBackground(new java.awt.Color(255, 255, 255));
        jb_tinhtongtien.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_tinhtongtien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/calculator.png"))); // NOI18N
        jb_tinhtongtien.setText("Tính Tổng tiền");
        jb_tinhtongtien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_tinhtongtien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_tinhtongtienActionPerformed(evt);
            }
        });

        jb_sua.setBackground(new java.awt.Color(255, 255, 255));
        jb_sua.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jb_sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pencil.png"))); // NOI18N
        jb_sua.setText("Sửa");
        jb_sua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_suaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlb_danhsach)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jb_tinhtongtien)
                        .addGap(18, 18, 18)
                        .addComponent(jb_thanhtoan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_searchkhachhang)
                        .addGap(18, 18, 18)
                        .addComponent(jcombo_searchby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_sua)))
                .addGap(18, 18, 18)
                .addComponent(jb_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_reset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_add)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jb_reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jlb_danhsach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jb_xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcombo_searchby, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jb_tinhtongtien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jb_thanhtoan)
                                .addComponent(jb_searchkhachhang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jb_sua)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jpane_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpane_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_lichsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_lichsuActionPerformed
        // TODO add your handling code here:
        jb_sua.setVisible(false);
        jb_tinhtongtien.setVisible(true);
        jb_add.setVisible(false);
        jb_thanhtoan.setVisible(false);
        jcombo_searchby.setVisible(true);
        jb_searchkhachhang.setVisible(true);
        jb_xoa.setVisible(true);
        jb_reset.setVisible(true);
        try {
            jlb_danhsach.setText("Danh sách Lịch sử");
            DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();

            DefaultComboBoxModel<String> cbmodel = (DefaultComboBoxModel<String>) jcombo_searchby.getModel();
            cbmodel.removeAllElements();
            String new_item[] = {"ID", "Tên nhân viên", "Tên khách hàng", "Trong tháng", "Trong năm", "Tổng tiền"};
            for (String x : new_item) {
                cbmodel.addElement(x);
            }
            model.setRowCount(0);
            model.setColumnCount(0);
            model.addColumn("ID");
            model.addColumn("Tên khách hàng");
            model.addColumn("SDT khách hàng");
            model.addColumn("Tên Nhân viên");
            model.addColumn("SDT Nhân viên");
            model.addColumn("Ngày bán");
            model.addColumn("Tổng tiền");
//            SELECT chitiet_hd.idhd, khachhang.tenkh, khachhang.sdtkh, nhanvien.tennv, nhanvien.sdtnv, hoadon.ngaylap, sum(soluong * giadv)
//                                FROM hoadon 
//                                INNER JOIN nhanvien ON hoadon.idnv = nhanvien.idnv 
//                                INNER JOIN khachhang ON hoadon.idkh = khachhang.idkh 
//                                INNER JOIN chitiet_hd ON chitiet_hd.idhd = hoadon.idhd 
//                                INNER JOIN dichvu ON dichvu.iddv = chitiet_hd.iddv
//                                GROUP BY chitiet_hd.idhd
            String query = """
                                select * from lichsu
                                """;
            pst = conn.prepareStatement(query);
            rs = pst.executeQuery();
            while (rs.next()) {
                Object[] row = new Object[10];
                row[0] = rs.getInt(2);
                row[1] = rs.getString(3);
                row[2] = rs.getString(4);
                row[3] = rs.getString(5);
                row[4] = rs.getString(6);
                row[5] = rs.getString(7);
                row[6] = rs.getInt(8);
                model.addRow(row);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jb_lichsuActionPerformed

    private void jb_khachhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_khachhangActionPerformed
        // TODO add your handling code here:  
        jb_sua.setVisible(true);
        jb_tinhtongtien.setVisible(false);
        jb_add.setVisible(true);
        jb_thanhtoan.setVisible(true);
        jcombo_searchby.setVisible(true);
        jb_searchkhachhang.setVisible(true);
        jb_xoa.setVisible(true);
        jb_reset.setVisible(true);
        try {

            jlb_danhsach.setText("Danh sách Khách hàng");
            DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();

            DefaultComboBoxModel<String> cbmodel = (DefaultComboBoxModel<String>) jcombo_searchby.getModel();
            cbmodel.removeAllElements();
            String new_item[] = {"Tên khách hàng", "Số điện thoại", "Email", "Giới tính", "Địa chỉ"};
            for (String x : new_item) {
                cbmodel.addElement(x);
            }
            model.setRowCount(0);
            model.setColumnCount(0);
            model.addColumn("ID");
            model.addColumn("Tên khách hàng");
            model.addColumn("Số điện thoại");
            model.addColumn("Email");
            model.addColumn("Giới Tính");
            model.addColumn("Địa chỉ");

            String query = "select * from quanlytiemnail.khachhang";
            pst = conn.prepareStatement(query);
            rs = pst.executeQuery();
            while (rs.next()) {
                Object[] row = new Object[6];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);
                row[5] = rs.getString(6);
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jb_khachhangActionPerformed

    private void jb_dichvuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_dichvuActionPerformed
        // TODO add your handling code here:
        jb_sua.setVisible(true);
        jb_tinhtongtien.setVisible(false);
        jb_add.setVisible(true);
        jb_thanhtoan.setVisible(false);
        jcombo_searchby.setVisible(true);
        jb_searchkhachhang.setVisible(true);
        jb_xoa.setVisible(true);
        jb_reset.setVisible(true);
        try {
            DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
            jlb_danhsach.setText("Danh sách Dịch vụ");
            // thay đổi combobox
            DefaultComboBoxModel<String> cbmodel = (DefaultComboBoxModel<String>) jcombo_searchby.getModel();
            cbmodel.removeAllElements();
            String new_item[] = {"Tên dịch vụ", "Giá dịch vụ"};
            for (String x : new_item) {
                cbmodel.addElement(x);
            }
            model.setColumnCount(0);
            model.setRowCount(0);
            String query = "select * from quanlytiemnail.dichvu";
            pst = conn.prepareStatement(query);
            rs = pst.executeQuery();

            model.addColumn("ID");
            model.addColumn("Tên Dịch Vụ");
            model.addColumn("Giá Dịch Vụ");

            while (rs.next()) {
                Object[] row = new Object[10];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getInt(3);
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jb_dichvuActionPerformed

    private void jb_nhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_nhanvienActionPerformed
        // TODO add your handling code here:
        jb_sua.setVisible(true);
        jb_tinhtongtien.setVisible(false);
        jb_add.setVisible(true);
        jb_thanhtoan.setVisible(false);
        jcombo_searchby.setVisible(true);
        jb_searchkhachhang.setVisible(true);
        jb_xoa.setVisible(true);
        jb_reset.setVisible(true);
        try {
            jlb_danhsach.setText("Danh sách Nhân viên");
            DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();

            DefaultComboBoxModel<String> cbmodel = (DefaultComboBoxModel<String>) jcombo_searchby.getModel();
            cbmodel.removeAllElements();
            String new_item[] = {"Tên nhân viên", "Số điện thoại", "Giới tính", "Năm sinh", "Lương"};
            for (String x : new_item) {
                cbmodel.addElement(x);
            }
            model.setColumnCount(0);
            model.setRowCount(0);
            String query = "select * from quanlytiemnail.nhanvien";
            pst = conn.prepareStatement(query);
            rs = pst.executeQuery();
            model.addColumn("ID");
            model.addColumn("Tên nhân viên");
            model.addColumn("Số điện thoại");
            model.addColumn("Giới tính");
            model.addColumn("Ngày sinh");
            model.addColumn("Lương");
            while (rs.next()) {
                Object[] row = new Object[10];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);
                row[5] = rs.getString(6);
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jb_nhanvienActionPerformed

    private void jb_thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_thoatActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Muốn Đăng xuất thật không ?", "Thông báo thoát ", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            new login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jb_thoatActionPerformed

    private void jb_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_homeActionPerformed
        // TODO add your handling code here:
        new QLTN(use).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jb_homeActionPerformed

    private void jb_homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_homeMouseEntered
        // TODO add your handling code here:
        jb_home.setBackground(new Color(102, 204, 255));
        jb_home.setForeground(Color.white);
    }//GEN-LAST:event_jb_homeMouseEntered

    private void jb_homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_homeMouseExited
        // TODO add your handling code here:
        jb_home.setBackground(Color.white);
        jb_home.setForeground(Color.black);
    }//GEN-LAST:event_jb_homeMouseExited

    private void jb_changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_changePassActionPerformed
        // TODO add your handling code here:
        new DoiMatKhau(use).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jb_changePassActionPerformed

    private void jb_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addActionPerformed
        // TODO add your handling code here:

        if ("Danh sách Khách hàng".equals(jlb_danhsach.getText())) {
            new ThemThongTinKhachHang(use).setVisible(true);
            this.dispose();
        } else if ("Danh sách Nhân viên".equals(jlb_danhsach.getText())) {
            new ThemThongTinNhanVien(use).setVisible(true);
            this.dispose();
        } else if ("Danh sách Dịch vụ".equals(jlb_danhsach.getText())) {
            new ThemThongTinDichVu(use).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jb_addActionPerformed

    private void jb_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_resetActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if ("Danh sách Khách hàng".equals(jlb_danhsach.getText())) {
            try {
                model.setRowCount(0);
                String query = """
                select * from quanlytiemnail.khachhang
                """;
                pst = conn.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    Object row[] = new Object[10];
                    row[0] = rs.getInt(1);
                    row[1] = rs.getString(2);
                    row[2] = rs.getString(3);
                    row[3] = rs.getString(4);
                    row[4] = rs.getString(5);
                    row[5] = rs.getString(6);
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else if ("Danh sách Nhân viên".equals(jlb_danhsach.getText())) {
            try {
                model.setRowCount(0);
                String query = """
                select * from quanlytiemnail.nhanvien
                """;
                pst = conn.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    Object row[] = new Object[10];
                    row[0] = rs.getInt(1);
                    row[1] = rs.getString(2);
                    row[2] = rs.getString(3);
                    row[3] = rs.getString(4);
                    row[4] = rs.getString(5);
                    row[5] = rs.getInt(6);
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else if ("Danh sách Dịch vụ".equals(jlb_danhsach.getText())) {
            try {
                model.setRowCount(0);
                String query = """
                select * from quanlytiemnail.dichvu
                """;
                pst = conn.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    Object row[] = new Object[10];
                    row[0] = rs.getInt(1);
                    row[1] = rs.getString(2);
                    row[2] = rs.getInt(3);
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else if ("Danh sách Lịch sử".equals(jlb_danhsach.getText())) {
            try {
                model.setRowCount(0);
                //                SELECT chitiet_hd.idhd, khachhang.tenkh, khachhang.sdtkh, nhanvien.tennv, nhanvien.sdtnv, hoadon.ngaylap, sum(soluong * giadv)
                //                                FROM hoadon
                //                                INNER JOIN nhanvien ON hoadon.idnv = nhanvien.idnv
                //                                INNER JOIN khachhang ON hoadon.idkh = khachhang.idkh
                //                                INNER JOIN chitiet_hd ON chitiet_hd.idhd = hoadon.idhd
                //                                INNER JOIN dichvu ON dichvu.iddv = chitiet_hd.iddv
                //                                GROUP BY chitiet_hd.idhd
                String query = """
                select * from lichsu
                """;
                pst = conn.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    Object[] row = new Object[10];
                    row[0] = rs.getInt(2);
                    row[1] = rs.getString(3);
                    row[2] = rs.getString(4);
                    row[3] = rs.getString(5);
                    row[4] = rs.getString(6);
                    row[5] = rs.getString(7);
                    row[6] = rs.getInt(8);
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jb_resetActionPerformed

    private void jb_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_xoaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if (null != jlb_danhsach.getText())
            switch (jlb_danhsach.getText()) {
                case "Danh sách Khách hàng" -> {
                    if (jtable_data.getSelectedRowCount() == 1) {
                        int choice = JOptionPane.showConfirmDialog(this, "Bạn có thật sự muốn xóa khách hàng này ?", "Thông báo xóa", JOptionPane.OK_CANCEL_OPTION);
                        if (choice == JOptionPane.OK_OPTION) {
                            try {

                                String xoakh = """
                            call dropItemTableKhachHang(?)
                            """;
                                pst = conn.prepareStatement(xoakh);
                                pst.setInt(1, Integer.parseInt(model.getValueAt(jtable_data.getSelectedRow(), 0).toString()));
                                pst.executeQuery();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                            String ma = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                            for (int i = 0; i < jtable_data.getRowCount(); i++) {
                                if (model.getValueAt(i, 0).toString().equals(ma)) {
                                    model.removeRow(i);
                                    break;
                                }
                            }
                            JOptionPane.showMessageDialog(this, "Xóa thành công");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn Khách hàng mà bạn muốn xóa", "Thông báo xóa", JOptionPane.WARNING_MESSAGE);
                    }
                }
                case "Danh sách Nhân viên" -> {
                    if (jtable_data.getSelectedRowCount() == 1) {
                        int choice = JOptionPane.showConfirmDialog(this, "Bạn có thật sự muốn xóa Nhân viên này ?", "Thông báo xóa", JOptionPane.OK_CANCEL_OPTION);
                        if (choice == JOptionPane.OK_OPTION) {
                            try {
                                String xoanv = """
                            call dropItemNhanVien(?)
                            """;
                                pst = conn.prepareStatement(xoanv);
                                pst.setInt(1, Integer.parseInt(model.getValueAt(jtable_data.getSelectedRow(), 0).toString()));
                                rs = pst.executeQuery();

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                            String ma = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                            for (int i = 0; i < jtable_data.getRowCount(); i++) {
                                if (model.getValueAt(i, 0).toString().equals(ma)) {
                                    model.removeRow(i);
                                    break;
                                }
                            }
                            JOptionPane.showMessageDialog(this, "Xóa thành công");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn Nhân viên mà bạn muốn xóa", "Thông báo xóa", JOptionPane.WARNING_MESSAGE);
                    }
                }
                case "Danh sách Dịch vụ" -> {
                    if (jtable_data.getSelectedRowCount() == 1) {
                        int choice = JOptionPane.showConfirmDialog(this, "Bạn có thật sự muốn xóa Dịch vụ này ?", "Thông báo xóa", JOptionPane.OK_CANCEL_OPTION);
                        if (choice == JOptionPane.OK_OPTION) {
                            try {
                                String xoadv = """
                            call dropItemTableDichVu(?)
                            """;
                                pst = conn.prepareStatement(xoadv);
                                pst.setInt(1, Integer.parseInt(model.getValueAt(jtable_data.getSelectedRow(), 0).toString()));
                                pst.executeQuery();

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                            String ma = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                            for (int i = 0; i < jtable_data.getRowCount(); i++) {
                                if (model.getValueAt(i, 0).toString().equals(ma)) {
                                    model.removeRow(i);
                                    break;
                                }
                            }
                            JOptionPane.showMessageDialog(this, "Xóa thành công");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn dịch vụ mà bạn muốn xóa", "Thông báo xóa", JOptionPane.WARNING_MESSAGE);
                    }
                }
                case "Danh sách Lịch sử" -> {
                    if (jtable_data.getSelectedRowCount() == 1) {
                        int choice = JOptionPane.showConfirmDialog(this, "Bạn có thật sự muốn xóa Lịch sử này ?", "Thông báo xóa", JOptionPane.OK_CANCEL_OPTION);
                        if (choice == JOptionPane.OK_OPTION) {
                            try {
                                String xoals = """
                            call dropLichSu(?)
                            """;
                                pst = conn.prepareStatement(xoals);
                                pst.setInt(1, Integer.parseInt(model.getValueAt(jtable_data.getSelectedRow(), 0).toString()));
                                rs = pst.executeQuery();

                                for (int i = 0; i < jtable_data.getRowCount(); i++) {
                                    if (model.getValueAt(i, 0).toString().equals(model.getValueAt(jtable_data.getSelectedRow(), 0).toString())) {
                                        model.removeRow(i);
                                    }
                                }
                                JOptionPane.showMessageDialog(this, "Xóa thành công");
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn lịch sử mà bạn muốn xóa", "Thông báo xóa", JOptionPane.WARNING_MESSAGE);
                    }
                }
                default -> {
                }
            }
    }//GEN-LAST:event_jb_xoaActionPerformed

    private void jb_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_suaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if ("Danh sách Khách hàng".equals(jlb_danhsach.getText())) {
            if (jtable_data.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần sửa !", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                String id = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                String tenkh = model.getValueAt(jtable_data.getSelectedRow(), 1).toString();
                String sdtkh = model.getValueAt(jtable_data.getSelectedRow(), 2).toString();
                String emailkh = model.getValueAt(jtable_data.getSelectedRow(), 3).toString();
                String gioitinhkh = model.getValueAt(jtable_data.getSelectedRow(), 4).toString();
                String diachikh = model.getValueAt(jtable_data.getSelectedRow(), 5).toString();
                SuaThongTinKhachHang suaThongTinKhachHang = new SuaThongTinKhachHang(use, id, tenkh, sdtkh, emailkh, gioitinhkh, diachikh);
                suaThongTinKhachHang.setVisible(true);
                this.dispose();
            }
        } else if ("Danh sách Nhân viên".equals(jlb_danhsach.getText())) {
            if (jtable_data.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Nhân viên cần sửa !", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                String id = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                String tennv = model.getValueAt(jtable_data.getSelectedRow(), 1).toString();
                String sdtnv = model.getValueAt(jtable_data.getSelectedRow(), 2).toString();
                String gioitinh = model.getValueAt(jtable_data.getSelectedRow(), 3).toString();
                String ngaysinh = model.getValueAt(jtable_data.getSelectedRow(), 4).toString();
                String luong = model.getValueAt(jtable_data.getSelectedRow(), 5).toString();
                new SuaThongTinNhanVien(use, id, tennv, sdtnv, gioitinh, ngaysinh, luong).setVisible(true);
                this.dispose();
            }
        } else if ("Danh sách Dịch vụ".equals(jlb_danhsach.getText())) {
            if (jtable_data.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Dịch vụ cần sửa !", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                String id = model.getValueAt(jtable_data.getSelectedRow(), 0).toString();
                String tendv = model.getValueAt(jtable_data.getSelectedRow(), 1).toString();
                String giadv = model.getValueAt(jtable_data.getSelectedRow(), 2).toString();
                new SuaThongTinDichVu(use, id, tendv, giadv).setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jb_suaActionPerformed

    private void jb_searchkhachhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_searchkhachhangActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if ("Danh sách Khách hàng".equals(jlb_danhsach.getText())) {
            if ("Tên khách hàng".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập tên khách hàng cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.khachhang where tenkh like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Số điện thoại".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Số điện thoại cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.khachhang where sdtkh like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Email".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Email cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.khachhang where email like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Giới tính".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Giới tính cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.khachhang where gioitinhkh like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Địa chỉ".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Địa chỉ cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.khachhang where diachikh like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } else if ("Danh sách Nhân viên".equals(jlb_danhsach.getText())) {
            if ("Tên nhân viên".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập tên nhân viên cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.nhanvien where tennv like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getInt(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Số điện thoại".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập số điện thoại cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.nhanvien where sdtnv like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getInt(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Giới tính".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Giới tính cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.nhanvien where gioitinhnv like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getInt(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Lương".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Lương cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.nhanvien where luongnv = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getString(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Năm sinh".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Năm sinh cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.nhanvien where year(ngaysinhnv) like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getString(3);
                        row[3] = rs.getString(4);
                        row[4] = rs.getString(5);
                        row[5] = rs.getInt(6);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } else if ("Danh sách Dịch vụ".equals(jlb_danhsach.getText())) {
            if ("Tên dịch vụ".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập tên dịch vụ cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.dichvu where tendv like ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getInt(3);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Giá dịch vụ".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Giá dịch vụ cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from quanlytiemnail.dichvu where giadv = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object row[] = new Object[10];
                        row[0] = rs.getInt(1);
                        row[1] = rs.getString(2);
                        row[2] = rs.getInt(3);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } else if ("Danh sách Lịch sử".equals(jlb_danhsach.getText())) {
            if ("Tên khách hàng".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Tên khách hàng cần tìm: ");
                model.setRowCount(0);
                try {
                    String x = """
                    select * from lichsu where tenkh = ?
                    """;
                    pst = conn.prepareStatement(x);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } else if ("Tên nhân viên".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Tên nhân viên cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from lichsu where tennv = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Trong tháng".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập tháng cần tìm cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from lichsu where month(ngayban) = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Trong năm".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Tên năm cần cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from lichsu where year(ngayban) = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("Tổng tiền".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng nhập Tổng tiền cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from lichsu where tongtien = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if ("ID".equals(jcombo_searchby.getSelectedItem().toString())) {
                String search_by = JOptionPane.showInputDialog("Vui lòng Nhập ID hóa đơn cần tìm: ");
                try {
                    model.setRowCount(0);
                    String query = """
                    select * from lichsu where idhd = ?
                    """;
                    pst = conn.prepareStatement(query);
                    pst.setString(1, search_by);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        Object[] row = new Object[10];
                        row[0] = rs.getInt(2);
                        row[1] = rs.getString(3);
                        row[2] = rs.getString(4);
                        row[3] = rs.getString(5);
                        row[4] = rs.getString(6);
                        row[5] = rs.getString(7);
                        row[6] = rs.getInt(8);
                        model.addRow(row);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_jb_searchkhachhangActionPerformed

    private void jb_thanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_thanhtoanActionPerformed
        // TODO add your handling code here:
        if ("Danh sách Khách hàng".equals(jlb_danhsach.getText())) {
            if (jtable_data.getSelectedRowCount() == 1) {
                new TinhTien(jlb_username.getText(), jtable_data.getValueAt(jtable_data.getSelectedRow(), 0).toString()).setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng muốn thanh toán", "Thông báo thanh toán", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jb_thanhtoanActionPerformed

    private void jb_tinhtongtienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_tinhtongtienActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if ("Danh sách Lịch sử".equals(jlb_danhsach.getText())) {
            if (jtable_data.getRowCount() != 0) {
                int tongtien = 0;
                for (int i = 0; i < jtable_data.getRowCount(); i++) {
                    tongtien += Integer.parseInt(model.getValueAt(i, 6).toString());
                }
                JOptionPane.showMessageDialog(this, "Tổng tiền là: " + String.format("%d", tongtien));
            } else {
                JOptionPane.showMessageDialog(this, "Bảng trống rồi !", "Thông báo tính toán", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jb_tinhtongtienActionPerformed

    private void jtable_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_dataMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jtable_data.getModel();
        if ("Danh sách Lịch sử".equals(jlb_danhsach.getText())) {
            int index = jtable_data.getSelectedRow();
            int tongtien = 0;
            String khachhang = jtable_data.getValueAt(index, 1).toString();
            String sdtKH = jtable_data.getValueAt(index, 2).toString();
            String nhanvien = jtable_data.getValueAt(index, 3).toString();
            String sdtnv = jtable_data.getValueAt(index, 4).toString();
            String ngayban = jtable_data.getValueAt(index, 5).toString();
            String dichvu = "";
            String gioitinh = "";
            try {
                int id = Integer.parseInt(jtable_data.getValueAt(index, 0).toString());
                String query = """
                select soluong, tendv, giadv, quanlytiemnail.nhanvien.gioitinhnv
                from (quanlytiemnail.chitiet_hd inner join quanlytiemnail.hoadon on quanlytiemnail.chitiet_hd.idhd = quanlytiemnail.hoadon.idhd)
                inner join quanlytiemnail.dichvu on quanlytiemnail.dichvu.iddv = quanlytiemnail.chitiet_hd.iddv
                inner join quanlytiemnail.nhanvien on quanlytiemnail.hoadon.idnv = quanlytiemnail.nhanvien.idnv
                where quanlytiemnail.hoadon.idhd = ?;
                """;
                pst = conn.prepareStatement(query);
                pst.setInt(1, id);
                rs = pst.executeQuery();
                while (rs.next()) {
                    if ("Nam".equals(rs.getString("gioitinhnv"))) {
                        gioitinh = "Nam";
                    } else {
                        gioitinh = "Nữ";
                    }
                    tongtien += rs.getInt("soluong") * rs.getInt("giadv");
                    dichvu += rs.getString("tendv") + " " + rs.getString("giadv") + "\n"
                            + "số lượng: " + rs.getString("soluong") + "\n";
                }
                JOptionPane.showMessageDialog(this, "THÔNG TIN CHI TIẾT\n"
                        + "ID: " + id + "\n"
                        + "Tên khách hàng: " + khachhang.toUpperCase() + "\n"
                        + "Số điện thoại khách hàng: " + sdtKH + "\n"
                        + "Tên nhân viên: " + nhanvien + "\n"
                        + "Giới tính: " + gioitinh + "\n"
                        + "Số điện thoại nhân viên: " + sdtnv + "\n"
                        + "Các dịch vụ sử dụng: " + "\n" + dichvu + "Tổng tiền là: " + tongtien + "\n");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jtable_dataMouseClicked

    private void jb_dichvuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_dichvuMouseEntered
        // TODO add your handling code here:
        jb_dichvu.setBackground(new Color(102, 204, 255));
        jb_dichvu.setForeground(Color.white);
    }//GEN-LAST:event_jb_dichvuMouseEntered

    private void jb_dichvuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_dichvuMouseExited
        // TODO add your handling code here:
        jb_dichvu.setBackground(Color.white);
        jb_dichvu.setForeground(Color.black);
    }//GEN-LAST:event_jb_dichvuMouseExited

    private void jb_khachhangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_khachhangMouseEntered
        // TODO add your handling code here:
        jb_khachhang.setBackground(new Color(102, 204, 255));
        jb_khachhang.setForeground(Color.white);
    }//GEN-LAST:event_jb_khachhangMouseEntered

    private void jb_khachhangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_khachhangMouseExited
        // TODO add your handling code here:
        jb_khachhang.setBackground(Color.white);
        jb_khachhang.setForeground(Color.black);
    }//GEN-LAST:event_jb_khachhangMouseExited

    private void jb_nhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_nhanvienMouseExited
        // TODO add your handling code here:
        jb_nhanvien.setBackground(Color.white);
        jb_nhanvien.setForeground(Color.black);
    }//GEN-LAST:event_jb_nhanvienMouseExited

    private void jb_nhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_nhanvienMouseEntered
        // TODO add your handling code here:
        jb_nhanvien.setBackground(new Color(102, 204, 255));
        jb_nhanvien.setForeground(Color.white);
    }//GEN-LAST:event_jb_nhanvienMouseEntered

    private void jb_lichsuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_lichsuMouseEntered
        // TODO add your handling code here:
        jb_lichsu.setBackground(new Color(102, 204, 255));
        jb_lichsu.setForeground(Color.white);
    }//GEN-LAST:event_jb_lichsuMouseEntered

    private void jb_lichsuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_lichsuMouseExited
        // TODO add your handling code here:
        jb_lichsu.setBackground(Color.white);
        jb_lichsu.setForeground(Color.black);
    }//GEN-LAST:event_jb_lichsuMouseExited

    private void jb_thoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_thoatMouseEntered
        // TODO add your handling code here:
        jb_thoat.setBackground(new Color(102, 204, 255));
        jb_thoat.setForeground(Color.white);
    }//GEN-LAST:event_jb_thoatMouseEntered

    private void jb_thoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_thoatMouseExited
        // TODO add your handling code here:
        jb_thoat.setBackground(Color.white);
        jb_thoat.setForeground(Color.black);
    }//GEN-LAST:event_jb_thoatMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLTN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLTN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLTN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLTN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLTN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_add;
    private javax.swing.JButton jb_changePass;
    private javax.swing.JButton jb_dichvu;
    private javax.swing.JButton jb_home;
    private javax.swing.JButton jb_khachhang;
    private javax.swing.JButton jb_lichsu;
    private javax.swing.JButton jb_nhanvien;
    private javax.swing.JButton jb_reset;
    private javax.swing.JButton jb_searchkhachhang;
    private javax.swing.JButton jb_sua;
    private javax.swing.JButton jb_thanhtoan;
    private javax.swing.JButton jb_thoat;
    private javax.swing.JButton jb_tinhtongtien;
    private javax.swing.JButton jb_xoa;
    private javax.swing.JComboBox<String> jcombo_searchby;
    private javax.swing.JLabel jlb_danhsach;
    private javax.swing.JLabel jlb_username;
    private javax.swing.JPanel jpane_header;
    private javax.swing.JTable jtable_data;
    // End of variables declaration//GEN-END:variables
}
